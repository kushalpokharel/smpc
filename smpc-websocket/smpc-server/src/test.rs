use curv::arithmetic::{BigInt,Converter};

mod tests{
    use curv::arithmetic::Modulo;

    use super::*;
    #[test]
    fn test_outputs() {
        let a = BigInt::from_str_radix("1731965227677135660569904933038109267598410412097603342077101882985433355050457125393481885845705506276810697778955028117758642531351163884884305723584365016278874901445456257946333572186545028146113303430068849970791700990742285398606309466321208094310797332911638673809377081935892936608487673558354394409081557371979487599483055287145957304820329330092937287039702280029354119155557559533884566458426166746443125599929618421068679517178059640948199847870000042773236655571042439179856680556749283728245632104428541846138658610997040511729546371986343384772802746547607375571247642110077045822073617324363778265097", 10).unwrap();
        let b = BigInt::from(7u64);
        let c = BigInt::from_str_radix("80228a0e5a90e77a44ca03124ac52582bbff4f520ef144563d56a2ce192674cb05f9bd5175ae93d09bb5718faa37c38ea69930d7a08e8e4fd110761db4d038284c5d0256cc75f03278fb362a221e68ac53a151cf73cdce3e96348797dcdf7f70d7b0edd35f6db75ab7869eb822d1c513306872fab0da357c2a2f70dce49978257245d5a603d377dbccf08e64d50ff4382bdac5b73177a6d1d71dde02a09bbf97bfe85f9363cdb4bd10d3de7733e829aa6f77cd9e404a512dec0f3c1b6ec440201e804da2819409ebc87b37402efe8c4003af92841b538481fe59f764170b71c28f4a3690ac26f37dd120ccf010dc706b6a28d86bc47c63076b098649e517140f", 16).unwrap();
        let result = BigInt::mod_mul(&a, &b, &c);
        println!("{}", result);
    }
}
